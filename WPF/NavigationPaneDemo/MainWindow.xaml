<Fluent:RibbonWindow   x:Class="NavigationPaneDemo.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:demo="clr-namespace:NavigationPaneDemo"
                       xmlns:tab="clr-namespace:FabTab;assembly=FabTab"
                      xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
                     xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:s="NavigationPane"
                     Title="Navigation Pane v1.0"
                     Background="{Binding Background,
                                          ElementName=navigationPaneExpander}"
                     Icon="Resources/folderopen.ico"
                     Loaded="RibbonWindow_Loaded"
                     ResizeMode="CanResizeWithGrip"
                     WindowStartupLocation="CenterScreen"
                     
                     mc:Ignorable="d">

    <Fluent:RibbonWindow.Resources>
        <ResourceDictionary>
       
            <s:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />
            <s:BooleanNegateConverter x:Key="BooleanNegateConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <LinearGradientBrush EndPoint="1,0" x:Key="mask">
                <LinearGradientBrush.Transform>
                    <RotateTransform Angle="10"/>
                </LinearGradientBrush.Transform>
                <GradientStop Offset="0" Color="White"/>
                <GradientStop Offset="0.1" />
            </LinearGradientBrush>
            <Style TargetType="{x:Type tab:FabTabItem}">
                <Setter Property="Header" Value="{Binding Path=LabelText,diagnostics:PresentationTraceSources.TraceLevel=High}"/>
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding}"/>

                            </StackPanel>

                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FontSize" Value="8"/>
                <Setter Property="Content" Value="X"/>
                <Setter Property="Height" Value="15"/>
                <Setter Property="Width" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="customBorder" CornerRadius="2" BorderThickness="1" BorderBrush="Black"
                                Background="LemonChiffon">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="customBorder" Property="Background" 
                                        Value="Orange" />
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="BitmapEffect">
                                        <Setter.Value>
                                            <OuterGlowBitmapEffect GlowColor="BlanchedAlmond" GlowSize="4"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MyImageButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Height" Value="250"/>
                <Setter Property="Width" Value="300"/>
                <Setter Property="Margin" Value="0,0,0,0"/>

            </Style>

            <Style x:Key="ContentTabMouseOverStyle" TargetType="{x:Type ContentControl}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BitmapEffect">
                            <Setter.Value>
                                <OuterGlowBitmapEffect GlowColor="DodgerBlue" GlowSize="4"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <LinearGradientBrush x:Key="ContentTabRectangleBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFE9EDF0" Offset="0.321"/>
                <GradientStop Color="#FFADD8E6" Offset="1"/>
            </LinearGradientBrush>

            <ContentControl Height="16" Width="20" x:Key="CustomContentTabHeader"
		                        Style="{StaticResource ContentTabMouseOverStyle}" ToolTip="Customized Content Tab">
                <Grid Height="16" Width="20" Margin="0,0,0,0">
                    <Grid.Resources>
                        <Style TargetType="{x:Type Rectangle}">
                            <Setter Property="Width" Value="8"/>
                            <Setter Property="Height" Value="6"/>
                            <Setter Property="Fill" Value="Orange"/>
                            <Setter Property="Stroke" Value="#FF000000"/>
                            <Setter Property="RadiusX" Value="2"/>
                            <Setter Property="RadiusY" Value="2"/>
                            <Setter Property="StrokeThickness" Value=".5"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Rectangle Grid.Column="0" Grid.Row="0"/>
                    <Rectangle Grid.Column="0" Grid.Row="1" />
                    <Rectangle Grid.Column="1" Grid.Row="0" />
                    <Rectangle Grid.Column="1" Grid.Row="1"  />
                </Grid>
            </ContentControl>

            <Style x:Key="ComboBoxFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle SnapsToDevicePixels="true" Margin="4,4,21,4" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F3F3F3" Offset="0"/>
                <GradientStop Color="#EBEBEB" Offset="0.5"/>
                <GradientStop Color="#DDDDDD" Offset="0.5"/>
                <GradientStop Color="#CDCDCD" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
            <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
            <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" StartPoint="0,0" MappingMode="Absolute">
                <GradientStop Color="#ABADB3" Offset="0.05"/>
                <GradientStop Color="#E2E3EA" Offset="0.07"/>
                <GradientStop Color="#E3E9EF" Offset="1"/>
            </LinearGradientBrush>
        </ResourceDictionary>
    </Fluent:RibbonWindow.Resources>
    <DockPanel >
        
        <Fluent:Ribbon DockPanel.Dock="Top">
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage Background="Red" />
            </Fluent:Ribbon.Menu>
            <Fluent:RibbonTabItem Header="成果系统">
                <Fluent:RibbonGroupBox Header="Layout">
                    <Fluent:DropDownButton Header="Navigation Pane">
                        <Fluent:DropDownButton.LargeIcon>
                            <Image Source="Resources/NavigationPane.png" />
                        </Fluent:DropDownButton.LargeIcon>
                        <Fluent:MenuItem CanAddToQuickAccessToolBar="False"
                                         Header="Normal"
                                         IsCheckable="True"
                                         IsChecked="{Binding IsMinimized,
                                                             ConverterParameter=Normal,
                                                             Converter={StaticResource BooleanNegateConverter},
                                                             ElementName=navigationPane}" />

                        <Fluent:MenuItem CanAddToQuickAccessToolBar="False"
                                         Header="Minimized"
                                         IsCheckable="True"
                                         IsChecked="{Binding IsMinimized, 
                                                             ElementName=navigationPane}" />
                        <Fluent:MenuItem CanAddToQuickAccessToolBar="False"
                                         Header="Off"
                                         IsCheckable="True"
                                         IsChecked="{Binding NavigatioPaneOff,
                                                             ElementName=ribbonWindow}" />
                        <Separator />
                        <Fluent:MenuItem CanAddToQuickAccessToolBar="False"
                                         Command="s:NavigationPane.ConfigureCommand"
                                         CommandParameter="Options"
                                         CommandTarget="{Binding ElementName=navigationPane,
                                                                 Mode=OneWay}"
                                         Header="Options..." />
                    </Fluent:DropDownButton>
                    <Fluent:DropDownButton />
                    <Fluent:DropDownButton Header="展开">
                        <Fluent:DropDownButton.LargeIcon>
                            <Image Source="/NavigationPaneDemo;component/Resources/Bar.png" />
                        </Fluent:DropDownButton.LargeIcon>
                        <Fluent:MenuItem CanAddToQuickAccessToolBar="False"
                                         Header="正常"
                                         IsCheckable="True"
                                         IsChecked="{Binding IsMinimized,
                                                             Converter={StaticResource BooleanNegateConverter},
                                                             ElementName=navigationPaneExpander}" />
                        <Fluent:MenuItem CanAddToQuickAccessToolBar="False"
                                         Header="最小化"
                                         IsCheckable="True"
                                         IsChecked="{Binding IsMinimized,
                                                             ElementName=navigationPaneExpander}" />
                        <Fluent:MenuItem CanAddToQuickAccessToolBar="False"
                                         Header="关闭"
                                         IsCheckable="True"
                                         IsChecked="{Binding ExpanderPaneOff,
                                                             ElementName=ribbonWindow}" />
                        <Separator />
                        <Fluent:MenuItem CanAddToQuickAccessToolBar="False"
                                         Command="s:NavigationPane.ConfigureCommand"
                                         CommandParameter="Options"
                                         CommandTarget="{Binding ElementName=Sections}"
                                         Header="Options..." />
                    </Fluent:DropDownButton>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="State">
                    <Fluent:Button Click="Button_Click_1" Header="Save State" />
                    <Fluent:Button Click="Button_Click_2" Header="Load State" />
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <Fluent:StatusBar VerticalAlignment="Bottom" DockPanel.Dock="Bottom" />
        <s:NavigationPane DockPanel.Dock="Left"   x:Name="navigationPane"   Width="200"
                          HorizontalAlignment="Left"
                                               
                          Margin="2,0,0,1"
                          BarTitle="lsdajfls"
                          SelectedIndex="0"
                          SelectionChanged="navigationPane_SelectionChanged">
            <s:NavigationPane.ItemsButtonsContextMenu>
                <ContextMenu>
                    <s:ConfigureMenuItem  MenuType="Options" />
                </ContextMenu>
            </s:NavigationPane.ItemsButtonsContextMenu>
            <s:NavigationPaneItem Name="intro"
                                  Header="Intro"
                                  Image="pack://application:,,,/NavigationPane;Component\Resources\Images\WindowsHS.png">
                <s:NavigationPaneItem.SubItems>
                    <s:NavigationPaneButton Content="prova" 
                                            Image="Resources/mail.ico"
                                            ImageSmall="Resources/folderopen.ico" />
                </s:NavigationPaneItem.SubItems>
                <StackPanel>
                    <TextBlock Margin="0,0,0,8"
                               HorizontalAlignment="Left"
                               FontSize="10.667"
                               TextWrapping="Wrap"><Run Language="it-it" Text="This is an Item created directly in the window with xaml." />
                        <LineBreak /><Run Language="it-it" />
                        <LineBreak /><Run Language="it-it" Text="To see an example of an item created in its own xaml file, see the &quot;Theme&quot; item below how it was implemented" />
                        <LineBreak /><Run Language="it-it" />
                        <LineBreak /><Run Language="it-it" Text="Adding items programatically. See window code behind if needed." />
                        <LineBreak /><Run Language="it-it" Text="Hit the Button" />
                    </TextBlock>
                    <TextBlock Margin="8,0,8,2" Text="New item name:" />
                    <TextBox x:Name="newItemName" 
                             Margin="8,0,8,4"
                             Text="NewItem" />
                    <TextBlock Margin="8,0,8,2" Text="New item contents:" />
                    <TextBox x:Name="newItemContents"
                             Margin="8,0,8,4"
                             MinLines="4"
                             Text="New Item Contents" />
                    <CheckBox x:Name="newItemExcluded"
                              Margin="8,0,8,4"
                              Content="Create a Disabled Item " />
                    <Button Margin="8,0"
                            Click="Button_Click"
                            Content="Create New Item" />
                </StackPanel>
            </s:NavigationPaneItem>
            <demo:Themes />
        </s:NavigationPane>

        <Grid>
            <tab:FabTabControl   x:Name="tabControl" 
                           ContentOpacityMask="{StaticResource mask}" ShowDefaultTransitionAnimation="False"
                            CloseButtonStyle="{StaticResource CloseButtonStyle}"
                                ContentTabImageButtonStyle="{StaticResource MyImageButtonStyle}"
                                ContentTabHeaderContent="{StaticResource CustomContentTabHeader}"
                               
                           >
                <tab:FabTabControl.Triggers>
                    <EventTrigger RoutedEvent="Selector.SelectionChanged">
                        <BeginStoryboard>
                            <Storyboard AutoReverse="False">
                                <tab:EasingDoubleAnimation Storyboard.TargetProperty="ContentOpacityMask.Transform.Angle"
                                                 Storyboard.TargetName="tabControl"
                                                     To="-90" From="10" Duration="0:0:0.7"
                                                       Equation="BackEaseInOut"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </tab:FabTabControl.Triggers>
                <tab:FabTabControl.Items>
                    <tab:FabTabItem Header="My View 1">

                    </tab:FabTabItem>
                    <tab:FabTabItem Header="My View 2" >

                    </tab:FabTabItem>
                    <tab:FabTabItem Header="My View 3">

                    </tab:FabTabItem>

                </tab:FabTabControl.Items>
            </tab:FabTabControl>
            <Border Margin="2,2,4,4"
                Background="White"
                BorderBrush="{Binding BorderBrush,
                                      ElementName=navigationPane}"
                BorderThickness="1"
                Padding="6" Width="0">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="4"
                                  Opacity="0.3"
                                  ShadowDepth="0"
                                  Color="#AC000000" />
                </Border.Effect>
            </Border>
        </Grid>
    </DockPanel>
</Fluent:RibbonWindow>
