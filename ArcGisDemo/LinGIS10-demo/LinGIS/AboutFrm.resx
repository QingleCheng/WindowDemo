<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hH7axeMh3v8DcXnEErdLFUIAAAAASUVORK5CYII=
</value>
  </data>
</root>