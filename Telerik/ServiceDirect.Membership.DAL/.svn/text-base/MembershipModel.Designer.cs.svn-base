//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace ServiceDirect.Membership.DAL
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class ServiceDirectMembershipDBEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“ServiceDirectMembershipDBEntities”部分中的连接字符串初始化新 ServiceDirectMembershipDBEntities 对象。
        /// </summary>
        public ServiceDirectMembershipDBEntities() : base("name=ServiceDirectMembershipDBEntities", "ServiceDirectMembershipDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ServiceDirectMembershipDBEntities 对象。
        /// </summary>
        public ServiceDirectMembershipDBEntities(string connectionString) : base(connectionString, "ServiceDirectMembershipDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ServiceDirectMembershipDBEntities 对象。
        /// </summary>
        public ServiceDirectMembershipDBEntities(EntityConnection connection) : base(connection, "ServiceDirectMembershipDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<vUTPRightWithRole> vUTPRightWithRole
        {
            get
            {
                if ((_vUTPRightWithRole == null))
                {
                    _vUTPRightWithRole = base.CreateObjectSet<vUTPRightWithRole>("vUTPRightWithRole");
                }
                return _vUTPRightWithRole;
            }
        }
        private ObjectSet<vUTPRightWithRole> _vUTPRightWithRole;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<vUTPRole> vUTPRole
        {
            get
            {
                if ((_vUTPRole == null))
                {
                    _vUTPRole = base.CreateObjectSet<vUTPRole>("vUTPRole");
                }
                return _vUTPRole;
            }
        }
        private ObjectSet<vUTPRole> _vUTPRole;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<vUTPUserWithRole> vUTPUserWithRole
        {
            get
            {
                if ((_vUTPUserWithRole == null))
                {
                    _vUTPUserWithRole = base.CreateObjectSet<vUTPUserWithRole>("vUTPUserWithRole");
                }
                return _vUTPUserWithRole;
            }
        }
        private ObjectSet<vUTPUserWithRole> _vUTPUserWithRole;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 vUTPRightWithRole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTovUTPRightWithRole(vUTPRightWithRole vUTPRightWithRole)
        {
            base.AddObject("vUTPRightWithRole", vUTPRightWithRole);
        }
    
        /// <summary>
        /// 用于向 vUTPRole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTovUTPRole(vUTPRole vUTPRole)
        {
            base.AddObject("vUTPRole", vUTPRole);
        }
    
        /// <summary>
        /// 用于向 vUTPUserWithRole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTovUTPUserWithRole(vUTPUserWithRole vUTPUserWithRole)
        {
            base.AddObject("vUTPUserWithRole", vUTPUserWithRole);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ServiceDirectDBModel", Name="vUTPRightWithRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vUTPRightWithRole : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 vUTPRightWithRole 对象。
        /// </summary>
        /// <param name="rightCode">RightCode 属性的初始值。</param>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        public static vUTPRightWithRole CreatevUTPRightWithRole(global::System.String rightCode, global::System.String roleID)
        {
            vUTPRightWithRole vUTPRightWithRole = new vUTPRightWithRole();
            vUTPRightWithRole.RightCode = rightCode;
            vUTPRightWithRole.RoleID = roleID;
            return vUTPRightWithRole;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RightCode
        {
            get
            {
                return _RightCode;
            }
            set
            {
                if (_RightCode != value)
                {
                    OnRightCodeChanging(value);
                    ReportPropertyChanging("RightCode");
                    _RightCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RightCode");
                    OnRightCodeChanged();
                }
            }
        }
        private global::System.String _RightCode;
        partial void OnRightCodeChanging(global::System.String value);
        partial void OnRightCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ServiceDirectDBModel", Name="vUTPRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vUTPRole : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 vUTPRole 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="roleName">RoleName 属性的初始值。</param>
        public static vUTPRole CreatevUTPRole(global::System.String roleID, global::System.String roleName)
        {
            vUTPRole vUTPRole = new vUTPRole();
            vUTPRole.RoleID = roleID;
            vUTPRole.RoleName = roleName;
            return vUTPRole;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                if (_RoleName != value)
                {
                    OnRoleNameChanging(value);
                    ReportPropertyChanging("RoleName");
                    _RoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleName");
                    OnRoleNameChanged();
                }
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ServiceDirectDBModel", Name="vUTPUserWithRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vUTPUserWithRole : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 vUTPUserWithRole 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        /// <param name="isDeleted">IsDeleted 属性的初始值。</param>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        public static vUTPUserWithRole CreatevUTPUserWithRole(global::System.String userID, global::System.String userName, global::System.Boolean isDeleted, global::System.String roleID)
        {
            vUTPUserWithRole vUTPUserWithRole = new vUTPUserWithRole();
            vUTPUserWithRole.UserID = userID;
            vUTPUserWithRole.UserName = userName;
            vUTPUserWithRole.IsDeleted = isDeleted;
            vUTPUserWithRole.RoleID = roleID;
            return vUTPUserWithRole;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                if (_IsDeleted != value)
                {
                    OnIsDeletedChanging(value);
                    ReportPropertyChanging("IsDeleted");
                    _IsDeleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsDeleted");
                    OnIsDeletedChanged();
                }
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isPayStation
        {
            get
            {
                return _isPayStation;
            }
            set
            {
                OnisPayStationChanging(value);
                ReportPropertyChanging("isPayStation");
                _isPayStation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isPayStation");
                OnisPayStationChanged();
            }
        }
        private Nullable<global::System.Boolean> _isPayStation;
        partial void OnisPayStationChanging(Nullable<global::System.Boolean> value);
        partial void OnisPayStationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsViewOnly
        {
            get
            {
                return _IsViewOnly;
            }
            set
            {
                OnIsViewOnlyChanging(value);
                ReportPropertyChanging("IsViewOnly");
                _IsViewOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsViewOnly");
                OnIsViewOnlyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsViewOnly;
        partial void OnIsViewOnlyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsViewOnlyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();

        #endregion
    
    }

    #endregion
    
}
