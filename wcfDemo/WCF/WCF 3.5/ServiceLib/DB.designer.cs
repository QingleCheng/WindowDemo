#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF.ServiceLib
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [System.Data.Linq.Mapping.DatabaseAttribute(Name = "Database")]
    public partial class DBDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertItem(Item instance);
        partial void UpdateItem(Item instance);
        partial void DeleteItem(Item instance);
        #endregion

        public DBDataContext() :
            base(global::WCF.ServiceLib.Properties.Settings.Default.DatabaseConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DBDataContext(string connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public DBDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<Item> Items
        {
            get
            {
                return this.GetTable<Item>();
            }
        }
    }

    [System.Runtime.Serialization.DataContract]
    [Table(Name = "dbo.Item")]
    public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ItemId;

        private string _Title;

        private System.DateTime _CreatedTime;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnItemIdChanging(int value);
        partial void OnItemIdChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        partial void OnCreatedTimeChanging(System.DateTime value);
        partial void OnCreatedTimeChanged();
        #endregion

        public Item()
        {
            OnCreated();
        }

        [System.Runtime.Serialization.DataMember(Order = 0)]
        [Column(Storage = "_ItemId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ItemId
        {
            get
            {
                return this._ItemId;
            }
            set
            {
                if ((this._ItemId != value))
                {
                    this.OnItemIdChanging(value);
                    this.SendPropertyChanging();
                    this._ItemId = value;
                    this.SendPropertyChanged("ItemId");
                    this.OnItemIdChanged();
                }
            }
        }

        [System.Runtime.Serialization.DataMember(Order = 1)]
        [Column(Storage = "_Title", DbType = "NVarChar(256) NOT NULL", CanBeNull = false)]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if ((this._Title != value))
                {
                    this.OnTitleChanging(value);
                    this.SendPropertyChanging();
                    this._Title = value;
                    this.SendPropertyChanged("Title");
                    this.OnTitleChanged();
                }
            }
        }

        [System.Runtime.Serialization.DataMember(Order = 2)]
        [Column(Storage = "_CreatedTime", DbType = "DateTime NOT NULL")]
        public System.DateTime CreatedTime
        {
            get
            {
                return this._CreatedTime;
            }
            set
            {
                if ((this._CreatedTime != value))
                {
                    this.OnCreatedTimeChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedTime = value;
                    this.SendPropertyChanged("CreatedTime");
                    this.OnCreatedTimeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
#pragma warning restore 1591
