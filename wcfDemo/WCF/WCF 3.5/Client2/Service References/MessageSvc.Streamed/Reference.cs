//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client2.MessageSvc.Streamed {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageSvc.Streamed.IStreamed")]
    public interface IStreamed {
        
        // CODEGEN: 操作 UploadFile 以后生成的消息协定不是 RPC，也不是换行文档。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamed/UploadFile", ReplyAction="http://tempuri.org/IStreamed/UploadFileResponse")]
        Client2.MessageSvc.Streamed.UploadFileResponse UploadFile(Client2.MessageSvc.Streamed.FileWrapper request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileWrapper", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileWrapper {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FilePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileData;
        
        public FileWrapper() {
        }
        
        public FileWrapper(string FilePath, System.IO.Stream FileData) {
            this.FilePath = FilePath;
            this.FileData = FileData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IStreamedChannel : Client2.MessageSvc.Streamed.IStreamed, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class StreamedClient : System.ServiceModel.ClientBase<Client2.MessageSvc.Streamed.IStreamed>, Client2.MessageSvc.Streamed.IStreamed {
        
        public StreamedClient() {
        }
        
        public StreamedClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StreamedClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StreamedClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StreamedClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client2.MessageSvc.Streamed.UploadFileResponse Client2.MessageSvc.Streamed.IStreamed.UploadFile(Client2.MessageSvc.Streamed.FileWrapper request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string FilePath, System.IO.Stream FileData) {
            Client2.MessageSvc.Streamed.FileWrapper inValue = new Client2.MessageSvc.Streamed.FileWrapper();
            inValue.FilePath = FilePath;
            inValue.FileData = FileData;
            Client2.MessageSvc.Streamed.UploadFileResponse retVal = ((Client2.MessageSvc.Streamed.IStreamed)(this)).UploadFile(inValue);
        }
    }
}
