//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client2.MessageSvc.OneWay {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageSvc.OneWay.IOneWay")]
    public interface IOneWay {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneWay/WithoutOneWay", ReplyAction="http://tempuri.org/IOneWay/WithoutOneWayResponse")]
        void WithoutOneWay();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOneWay/WithOneWay")]
        void WithOneWay();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IOneWayChannel : Client2.MessageSvc.OneWay.IOneWay, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class OneWayClient : System.ServiceModel.ClientBase<Client2.MessageSvc.OneWay.IOneWay>, Client2.MessageSvc.OneWay.IOneWay {
        
        public OneWayClient() {
        }
        
        public OneWayClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OneWayClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OneWayClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OneWayClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void WithoutOneWay() {
            base.Channel.WithoutOneWay();
        }
        
        public void WithOneWay() {
            base.Channel.WithOneWay();
        }
    }
}
