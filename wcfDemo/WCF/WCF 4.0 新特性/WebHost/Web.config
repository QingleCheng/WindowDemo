<?xml version="1.0"?>
<configuration>
    <system.web>
        <compilation debug="true" targetFramework="4.0" />

        <!--
            要在 REST 服务上实现 HTTP 缓存，需要做的配置如下
            1、在 web.config 中的 system.web/caching 节点上为 REST 服务提供一个缓存配置
            2、在方法上通过类似 [AspNetCacheProfile("Cache30S")] 的声明指定方法所使用的缓存配置
            3、在 web.config 中的 system.serviceModel/serviceHostingEnvironment 节点上增加一个属性 aspNetCompatibilityEnabled="true" ，以启用 asp.net 兼容模式
            4、在方法上使用如下声明，[AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)] ，以启用 asp.net 兼容模式
        -->
        <caching>
            <outputCacheSettings>
                <outputCacheProfiles>
                    <add name="Cache30S" duration="30" varyByParam="*" />
                </outputCacheProfiles>
            </outputCacheSettings>
        </caching>
        
    </system.web>
    <system.serviceModel>

        <!--
            要实现“不需要 .svc 的物理文件，而直接在 IIS 上托管 WCF 服务”的功能，需要指定相对地址和服务类型之间的映射关系
            relativeAddress - 向外提供服务的相对地址
            service - 服务类型
            factory - ajax 服务使用 System.ServiceModel.Activation.WebScriptServiceHostFactory ， rest 服务使用 System.ServiceModel.Activation.WebServiceHostFactory
        -->
        <serviceHostingEnvironment>
        <!--<serviceHostingEnvironment aspNetCompatibilityEnabled="true">-->
            <serviceActivations>
                <add relativeAddress="IIS_Hosting_Without_SVC_File.svc" service="ServiceLib.Demo" />
                <add relativeAddress="WebScriptEndpointDemo.svc" service="ServiceLib.AjaxDemo" factory="System.ServiceModel.Activation.WebScriptServiceHostFactory" />
                <add relativeAddress="RestDemo.svc" service="ServiceLib.RestDemo" factory="System.ServiceModel.Activation.WebServiceHostFactory" />
            </serviceActivations>
        </serviceHostingEnvironment>

        <!--
            标准终结点是已经定义好相关配置的标准终结点
            通过 kind 指定标准终结点
        -->
        <services>
            <service name="ServiceLib.AjaxDemo">
                <endpoint kind="webScriptEndpoint" contract="ServiceLib.IAjaxDemo" />
            </service>
            <service name="ServiceLib.RestDemo">
                <endpoint kind="webHttpEndpoint" contract="ServiceLib.IRestDemo" behaviorConfiguration="HelpBehavior" />
            </service>
        </services>
        
        <behaviors>
            <endpointBehaviors>
                <!--
                    启用 REST 的 Help 功能（在服务地址上加“/help”即可进入 REST 服务的帮助页面）
                    本例的 REST 服务的帮助页面为 http://localhost:14802/RestDemo.svc/help
                -->
                <behavior name="HelpBehavior">
                    <webHttp helpEnabled="true" />
                </behavior>
            </endpointBehaviors>
            <serviceBehaviors>
                <behavior>
                    <serviceMetadata httpGetEnabled="true"/>
                    <serviceDebug includeExceptionDetailInFaults="true"/>
                </behavior>
            </serviceBehaviors>
        </behaviors>
        
    </system.serviceModel>
</configuration>
